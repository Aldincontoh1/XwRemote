//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Poderosa.Protocols.strings.resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("XwRemote.Misc.Poderosa.Protocols.strings", typeof(strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection to cygwin - Connecting... (Ctrl+C to Stop).
        /// </summary>
        internal static string Caption_CygwinLoginDialog_ConnectingCygwin {
            get {
                return ResourceManager.GetString("Caption.CygwinLoginDialog.ConnectingCygwin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection to SFU - Connecting... (Ctrl+C to Stop).
        /// </summary>
        internal static string Caption_CygwinLoginDialog_ConnectingSFU {
            get {
                return ResourceManager.GetString("Caption.CygwinLoginDialog.ConnectingSFU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (Using SOCKS).
        /// </summary>
        internal static string Caption_TCPTerminalConnection_UsingSOCKS {
            get {
                return ResourceManager.GetString("Caption.TCPTerminalConnection.UsingSOCKS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        internal static string Common_Cancel {
            get {
                return ResourceManager.GetString("Common.Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OK.
        /// </summary>
        internal static string Common_OK {
            get {
                return ResourceManager.GetString("Common.OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No restriction.
        /// </summary>
        internal static string Enum_IPVersionPriority_Both {
            get {
                return ResourceManager.GetString("Enum.IPVersionPriority.Both", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use IPv4 Only.
        /// </summary>
        internal static string Enum_IPVersionPriority_V4Only {
            get {
                return ResourceManager.GetString("Enum.IPVersionPriority.V4Only", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use IPv6 Only.
        /// </summary>
        internal static string Enum_IPVersionPriority_V6Only {
            get {
                return ResourceManager.GetString("Enum.IPVersionPriority.V6Only", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Advanced configuration.
        /// </summary>
        internal static string Form_CygwinLoginDialog__advancedOptionCheck {
            get {
                return ResourceManager.GetString("Form.CygwinLoginDialog._advancedOptionCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Home directory.
        /// </summary>
        internal static string Form_CygwinLoginDialog__homeDirectoryLabel {
            get {
                return ResourceManager.GetString("Form.CygwinLoginDialog._homeDirectoryLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you cannot start the shell, please re-compile CygTerm..
        /// </summary>
        internal static string Form_CygwinLoginDialog__lMessage {
            get {
                return ResourceManager.GetString("Form.CygwinLoginDialog._lMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Log file.
        /// </summary>
        internal static string Form_CygwinLoginDialog__logFileLabel {
            get {
                return ResourceManager.GetString("Form.CygwinLoginDialog._logFileLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log &amp;type.
        /// </summary>
        internal static string Form_CygwinLoginDialog__logTypeLabel {
            get {
                return ResourceManager.GetString("Form.CygwinLoginDialog._logTypeLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Shell.
        /// </summary>
        internal static string Form_CygwinLoginDialog__shellLabel {
            get {
                return ResourceManager.GetString("Form.CygwinLoginDialog._shellLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection to cygwin.
        /// </summary>
        internal static string Form_CygwinLoginDialog_TextCygwin {
            get {
                return ResourceManager.GetString("Form.CygwinLoginDialog.TextCygwin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection to SFU.
        /// </summary>
        internal static string Form_CygwinLoginDialog_TextSFU {
            get {
                return ResourceManager.GetString("Form.CygwinLoginDialog.TextSFU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The IP address of the host {0} was not obtained..
        /// </summary>
        internal static string Message_AddressNotResolved {
            get {
                return ResourceManager.GetString("Message.AddressNotResolved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timed out to connect..
        /// </summary>
        internal static string Message_ConnectionTimedOut {
            get {
                return ResourceManager.GetString("Message.ConnectionTimedOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection error.
        /// </summary>
        internal static string Message_CygwinLoginDialog_ConnectionError {
            get {
                return ResourceManager.GetString("Message.CygwinLoginDialog.ConnectionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The home directory is empty..
        /// </summary>
        internal static string Message_CygwinLoginDialog_EmptyHomeDirectory {
            get {
                return ResourceManager.GetString("Message.CygwinLoginDialog.EmptyHomeDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The shell is empty..
        /// </summary>
        internal static string Message_CygwinLoginDialog_EmptyShell {
            get {
                return ResourceManager.GetString("Message.CygwinLoginDialog.EmptyShell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to cygterm.exe cannot be found..
        /// </summary>
        internal static string Message_CygwinUtil_CygtermExeNotFound {
            get {
                return ResourceManager.GetString("Message.CygwinUtil.CygtermExeNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while connecting to cygwin.
        ///.
        /// </summary>
        internal static string Message_CygwinUtil_FailedToConnect {
            get {
                return ResourceManager.GetString("Message.CygwinUtil.FailedToConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to run cygterm.
        /// </summary>
        internal static string Message_CygwinUtil_FailedToRunCygterm {
            get {
                return ResourceManager.GetString("Message.CygwinUtil.FailedToRunCygterm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cygwin registry key is not found. Cygwin may be not installed correctly..
        /// </summary>
        internal static string Message_CygwinUtil_KeyNotFound {
            get {
                return ResourceManager.GetString("Message.CygwinUtil.KeyNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to connect the host {0}..
        /// </summary>
        internal static string Message_FailedToConnectAddress {
            get {
                return ResourceManager.GetString("Message.FailedToConnectAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to connect the port {1} of the host {0}..
        /// </summary>
        internal static string Message_FailedToConnectPort {
            get {
                return ResourceManager.GetString("Message.FailedToConnectPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The public key of the SSH server is not cached in ssh_known_hosts. Do you wish to register it and continue?.
        /// </summary>
        internal static string Message_HostKeyChecker_AskHostKeyRegister {
            get {
                return ResourceManager.GetString("Message.HostKeyChecker.AskHostKeyRegister", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The public key of the SSH server differs from the old key in ssh_known_hosts. Do you wish to renew it and continue?.
        /// </summary>
        internal static string Message_HostKeyChecker_AskHostKeyRenew {
            get {
                return ResourceManager.GetString("Message.HostKeyChecker.AskHostKeyRenew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to configure serial port..
        /// </summary>
        internal static string Message_SerialTerminalConnection_ConfigError {
            get {
                return ResourceManager.GetString("Message.SerialTerminalConnection.ConfigError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Serial connections can not be reproduced..
        /// </summary>
        internal static string Message_SerialTerminalConnection_ReproduceError {
            get {
                return ResourceManager.GetString("Message.SerialTerminalConnection.ReproduceError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while connecting to Services for Unix.
        ///.
        /// </summary>
        internal static string Message_SFUUtil_FailedToConnect {
            get {
                return ResourceManager.GetString("Message.SFUUtil.FailedToConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The registry key {0} is not found. Services for Unix may be not installed correctly..
        /// </summary>
        internal static string Message_SFUUtil_KeyNotFound {
            get {
                return ResourceManager.GetString("Message.SFUUtil.KeyNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Abort the connection..
        /// </summary>
        internal static string Message_SSHConnector_Cancelled {
            get {
                return ResourceManager.GetString("Message.SSHConnector.Cancelled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to send break signal. Please check whether the SSH server supports break signals..
        /// </summary>
        internal static string Message_SSHTerminalconnection_BreakError {
            get {
                return ResourceManager.GetString("Message.SSHTerminalconnection.BreakError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while closing the connection..
        /// </summary>
        internal static string Message_SSHTerminalConnection_CloseError {
            get {
                return ResourceManager.GetString("Message.SSHTerminalConnection.CloseError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &quot;Memory Passphrase until the Application Quits&quot; option in the SSH tab of the option dialog must be set when you reproduce SSH1 connections..
        /// </summary>
        internal static string Message_SSHTerminalConnection_ReproduceErrorOnSSH1 {
            get {
                return ResourceManager.GetString("Message.SSHTerminalConnection.ReproduceErrorOnSSH1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &quot;Memory Passphrase until the Application Quits&quot; option in the SSH tab of the option dialog must be set when you reproduce closed SSH2 connections..
        /// </summary>
        internal static string Message_SSHTerminalConnection_ReproduceErrorOnSSH2 {
            get {
                return ResourceManager.GetString("Message.SSHTerminalConnection.ReproduceErrorOnSSH2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to specify SuppressGoAhead option..
        /// </summary>
        internal static string Message_Telnet_FailedToSendSuppressGoAhead {
            get {
                return ResourceManager.GetString("Message.Telnet.FailedToSendSuppressGoAhead", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to specify terminal type..
        /// </summary>
        internal static string Message_Telnet_FailedToSendTerminalType {
            get {
                return ResourceManager.GetString("Message.Telnet.FailedToSendTerminalType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to specify window size..
        /// </summary>
        internal static string Message_Telnet_FailedToSendWidnowSize {
            get {
                return ResourceManager.GetString("Message.Telnet.FailedToSendWidnowSize", resourceCulture);
            }
        }
    }
}
